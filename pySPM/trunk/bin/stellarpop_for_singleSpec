#! /usr/bin/env python

import sys
for arg in sys.argv:
    print arg

from os.path import join
import os
import time
import glob
import numpy as np
import astropy.cosmology as co
cosmo = co.Planck15
#cosmo=co.FlatLambdaCDM(H0=70,Om0=0.3)
from GalaxySurveyMUSE import *
survey = GalaxySurveyMUSE()

# for one galaxy spectrum
import GalaxySpectrumFIREFLY as gs
import StellarPopulationModel as spm

stackList = glob.glob(join(os.environ['DATA_DIR'],"MUSE","*.txt"))

for ii	 in range(len(survey.catalog)):
	catalog_entry = survey.catalog[jj]
	spectrum = GalaxySpectrumMUSE(catalog_entry)
	spec = gs.GalaxySpectrumFIREFLY(spectrum.path_to_spectrum)
	spec.openObservedMuseSpectrum(catalog_entry)
	t0=time.time()
	# initiates the spectrum and gets the data
	spec=gs.GalaxySpectrumFIREFLY(specFile, milky_way_reddening=True, stack_resolution = 3000. )
	spec.openObservedMuseSpectrum(catalog_entry)
	outFile = specFile[:-4], ".modelContinuum.fits"
	print outFile
	# gets the model for MILES, fits and writes
	model = spm.StellarPopulationModel(spec, outFile, cosmo, models = 'm11', model_libs = ['MILES'], imfs = ['ss'], age_limits = [6,10], downgrade_models = True, data_wave_medium = 'air', Z_limits = [-3.,1.],suffix="-SPM-MILES.fits", use_downgraded_models = False)
	model.fit_models_to_data()
	print "time used =", time.time()-t0 ,"seconds"


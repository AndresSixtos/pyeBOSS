# Login to sciama
sciama
cd $PYSU_DIR/spm/bin

# executable scripts

# SDSS DR7 and DR12
python stellarpop_sdss_single_kroupa
python stellarpop_sdss_single_salpeter
# SDSS DR14
python stellarpop_sdssdr14_single_kroupa
python stellarpop_sdssdr14_single_salpeter
# SDSS single spectrum
python stellarpop_sdss_singleSpec_kroupa
python stellarpop_sdss_singleSpec_salpeter

# DEEP2, VIPERS, VVDS 
python stellarpop_deep2_kroupa
python stellarpop_deep2_salpeter
python stellarpop_vipers_kroupa
python stellarpop_vipers_salpeter
python stellarpop_vvdsdeep_kroupa
python stellarpop_vvdsdeep_salpeter
python stellarpop_vvdswide_kroupa
python stellarpop_vvdswide_salpeter

# for single spectra or single stacks
python stellarpop_single
python stellarpop_stacks
python stellarpop_stacks_EBOSS
python stellarpop_stacks_tutorial

# runs for the emission line LF stacks
python setup_run_for_stacks_DEEP2
python setup_run_for_stacks_VVDSDEEP

# rountines to write and submit the batch scripts
python write_run_scripts_*.py
python submit_new_jobs.txt
python submit_scripts.py

# combine models into a single model spectrum
cd $HOME/batch_combine or batch_combine_sdss
where scripts run 
python combine_model_spectra.py PLATE MJD FIBERID
that creates the combined models
The running scripts were created with 
python combine_model_spectra_write_scripts.py

# creates per plate catalogs
cd /users/comparat/batch_spFly_perPlate
qsub run_ebdr14_kr.sh
that executes :
python create_perPlate_tables.py

# scripts to check the status
python check_run_status.py
python run_missing_fits.sh

cd /users/comparat/summary_tables_stellarpop
qsub all .sh scripts
it merges per plate tables with firefly outputs.

# summary table creation per plate for SDSS
python create_summary_tables_*.py

# and summary files for global survey catalogs
# python merge_spFlyAll.sh, deprecated
python create_summary_table_DEEP2.py
python create_summary_table_VIPERS.py
python create_summary_table_VVDS.py

# to create th ecummary files 
qsub merge_spFlyAll.sh
#previous implementations :
#python create_spFlyAll.py
#python create_CAS_table.py


# to check the status :
cd $DATA_DIR/status
qsub run_status_eBOSS.sh
qsub run_status_SDSS.sh
it executes spm/bin/python check_status_eBOSS or SDSS.py


# copy result files


scp -r comparat@login5.sciama.icg.port.ac.uk:/mnt/lustre/sdss-dr12/deep2/catalogs/*.fits D:\data\SDSS_SPM\catalogs_firefly\

J0h@n_1234

scp -r comparat@login5.sciama.icg.port.ac.uk:/mnt/lustre/sdss-dr12/vipers/catalogs/*.fits D:\data\SDSS_SPM\catalogs_firefly\

J0h@n_1234

scp -r comparat@login5.sciama.icg.port.ac.uk:/mnt/lustre/sdss-dr12/vvds/catalogs/*.fits D:\data\SDSS_SPM\catalogs_firefly\

J0h@n_1234

scp -r comparat@login5.sciama.icg.port.ac.uk:/mnt/lustre/sdss-dr12/SDSS-DR12/catalogs/FireflyGalaxySdss26.fits .

J0h@n_1234

scp -r comparat@login5.sciama.icg.port.ac.uk:/mnt/lustre/sdss-dr12/eBOSS-DR14/catalogs/FireflyGalaxyEbossDR14.fits .

J0h@n_1234

# science analysis 

stellar_mass histogram for CMASS NGC

volume = 6851.0*PI*(comovingVolume( 0.6, 70., 0.3, 0.7) - comovingVolume( 0.5, 70., 0.3, 0.7))/129600.
weight = WEIGHT_SYSTOT*(weight_CP+weight_noz-1)/volume/0.1

compare with the Ilbert SMF for example.

Add the DEEP2 and Bernardi et  al. and  Moustakas et al. SMF

#! /usr/bin/env python

import sys
for arg in sys.argv:
    print arg

from os.path import join
import os
import time
import glob
import numpy as np
import astropy.cosmology as co
cosmo = co.Planck15
#cosmo=co.FlatLambdaCDM(H0=70,Om0=0.3)

# for one galaxy spectrum
import GalaxySpectrumFIREFLY as gs
import StellarPopulationModel as spm

specFile = sys.argv[1] # stack file
# specFile ="/home/comparat/database/DEEP2/products/emissionLineLuminosityFunctions/O3_5007/O3_5007-DEEP2-z0.451_stack_N_400_R_4343_L_2.68632605763e+40.fits"
t0=time.time()
# initiates the spectrum and gets the data
spec=gs.GalaxySpectrumFIREFLY(specFile, milky_way_reddening=False)
spec.openObservedStack()

#outFile = np.core.defchararray.replace(specFile[][:-5], "data", "fits").item()
file =os.path.basename(specFile)
outFile = join(os.environ['SPECTRASTACKS_DIR'], "fits", file[:7], file)
print outFile
print '========================='
# gets the model for MILES, fits and writes
model = spm.StellarPopulationModel(spec, outFile, cosmo, models = 'm11', model_libs = ['MILES'], imfs = ['ss'], age_limits = [6,10], downgrade_models = True, data_wave_medium = 'air', Z_limits = [-3.,1.],suffix="-SPM-MILES.fits", use_downgraded_models = False)
model.fit_models_to_data()

# gets the model for Stelib, fits and writes
# model = spm.StellarPopulationModel(spec, outFile, cosmo, models = 'm11', model_libs = ['STELIB'], imfs = ['ss'], age_limits = [6,10], downgrade_models = False, data_wave_medium = 'air', Z_limits = [-3.,1.],suffix="-SPM-STELIB.fits", use_downgraded_models = False)
# model.fit_models_to_data()

print "time used =", time.time()-t0 ,"seconds"


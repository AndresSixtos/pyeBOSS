#! /usr/bin/env python

import sys
from os.path import join
import os
import time
import numpy as np
import glob
import astropy.cosmology as co
cosmo = co.Planck13
import astropy.io.fits as fits

# for one galaxy spectrum
import GalaxySpectrumFIREFLY as gs
import StellarPopulationModel as spm

catalog=fits.open(join(os.environ['DEEP2_DIR'], "catalogs", "zcat.deep2.dr4.v4.LFcatalogTC.Planck15.fits"))[1].data
outputFolder = join( os.environ['DEEP2_DIR'], 'stellarpop-m11-salpeter', 'stellarpop')

def runSpec(catalog_entry):
	print catalog_entry['ZBEST'], catalog_entry['RA'],  catalog_entry['DEC']
	t0=time.time()
	path_to_spectrum = glob.glob(join(os.environ['DEEP2_DIR'], 'spectra', mask, '*', '*' + objno + '*_fc_tc.dat'))
	if len(path_to_spectrum)>=1:
		try:
			spec=gs.GalaxySpectrumFIREFLY("-", milky_way_reddening=True)
			spec.openObservedDEEP2pectrum(catalog_entry)
			ageMax = np.log10(cosmo.age(spec.redshift).value*1e9)
			if spec.redshift>0.01 and spec.redshift < 1.7 :
				model = spm.StellarPopulationModel(spec, join(outputFolder , 'spFly-deep2-'+mask+'-'+objno ), cosmo, models = 'm11', model_libs = ['MILES'], imfs = ['ss'], age_limits = [6,10], downgrade_models = True, data_wave_medium = 'air', Z_limits = [-3.,1.],suffix="-ss.fits", use_downgraded_models = True)
				try :
					model.fit_models_to_data()
					#print( model.averages )
				except (ValueError):
					pass

			print "time used =", time.time()-t0 ,"seconds"
		except (IndexError):
					pass


for catalog_entry in catalog:
	mask=str(catalog_entry['MASK'])
	objno=str(catalog_entry['OBJNO'])
	if os.path.isfile(join(outputFolder , 'spFly-deep2-'+mask+'-'+objno +"-ss.fits")):
		pass
	else:
		runSpec(catalog_entry)
		

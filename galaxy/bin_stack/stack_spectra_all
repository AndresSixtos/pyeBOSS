#! /usr/bin/env python

"""
This script produces the stacks for emission line luminosity limited samples.
"""
import sys
import os 
from os.path import join
data_dir = os.environ['DATA_DIR']
from SpectraStacking import *


f = open(join(os.environ['LFMODELS_DIR'], "data" , "O2_3728-data-luminosity-limits-Planck15.txt"),'r')
lines = f.readlines()
lmins, lmaxs, fileNames, pathes = [], [], [], []
for line in lines[1:] :
	name = line.split()[2]
	surv = name.split('-')[1] 
	print name, surv
	if surv == "DEEP2R24.2" or surv == "VVDSDEEPI24" or surv == "VVDSWIDEI22.5":
		lmins.append( float(line.split()[0]) )
		lmaxs.append( float(line.split()[1]) )
		fileNames.append(name)
		if surv == "DEEP2R24.2":
			pathes.append(join(os.environ['DEEP2_DIR'], "products", "emissionLineLuminosityFunctions","O2_3728", name[:-4]+".fits"))
		if surv == "VVDSDEEPI24" or surv == "VVDSWIDEI22.5":
			pathes.append(join(os.environ['VVDS_DIR'], "products", "emissionLineLuminosityFunctions","O2_3728", name[:-4]+".fits"))

f.close()


f = open(join(os.environ['LFMODELS_DIR'], "data" , "O3_5007-data-luminosity-limits-Planck15.txt"),'r')
lines = f.readlines()
for line in lines[1:] :
	name = line.split()[2]
	surv = name.split('-')[1] 
	print name, surv
	if surv == "DEEP2R24.2" or surv == "VVDSDEEPI24" or surv == "VVDSWIDEI22.5":
		lmins.append( float(line.split()[0]) )
		lmaxs.append( float(line.split()[1]) )
		fileNames.append(name)
		if surv == "DEEP2R24.2":
			pathes.append(join(os.environ['DEEP2_DIR'], "products", "emissionLineLuminosityFunctions","O3_5007", name[:-4]+".fits"))
		if surv == "VVDSDEEPI24" or surv == "VVDSWIDEI22.5":
			pathes.append(join(os.environ['VVDS_DIR'], "products", "emissionLineLuminosityFunctions","O3_5007", name[:-4]+".fits"))


f.close()

f = open(join(os.environ['LFMODELS_DIR'], "data" , "H1_4862-data-luminosity-limits-Planck15.txt"),'r')
lines = f.readlines()
for line in lines[1:] :
	name = line.split()[2]
	surv = name.split('-')[1] 
	print name, surv
	if surv == "DEEP2R24.2" or surv == "VVDSDEEPI24" or surv == "VVDSWIDEI22.5":
		lmins.append( float(line.split()[0]) )
		lmaxs.append( float(line.split()[1]) )
		fileNames.append(name)
		if surv == "DEEP2R24.2":
			pathes.append(join(os.environ['DEEP2_DIR'], "products", "emissionLineLuminosityFunctions","H1_4862", name[:-4]+".fits"))
		if surv == "VVDSDEEPI24" or surv == "VVDSWIDEI22.5":
			pathes.append(join(os.environ['VVDS_DIR'], "products", "emissionLineLuminosityFunctions","H1_4862", name[:-4]+".fits"))


f.close()

dictLmin = { fileNames[ii]: lmins[ii] for ii in range(len(fileNames)) }
dictLmax = { fileNames[ii]: lmaxs[ii] for ii in range(len(fileNames)) }

#deep2_dir = os.environ['DEEP2_DIR']
dataList = n.array(pathes)
#glob.glob( join(deep2_dir, "products", "emissionLineLuminosityFunctions", "??_????", "*.fits"))


# construct meta data matrix

survey, line, LFname = n.empty(len(dataList), dtype = 'S20'), n.empty(len(dataList), dtype = 'S8'),  n.empty(len(dataList), dtype = 'S50')
lcomp = n.empty(len(dataList), dtype = float)


for ii, el in enumerate(dataList):
	line[ii] = el.split('/')[-2]
	LFname[ii] = el.split('/')[-1][:-5]+".txt"
	survey[ii] = el.split('-')[-2]
	hd = fits.open(el)
	lcomp[ii] = n.log10(hd[0].header['COMPLETENESS'])

selection = (survey =="VVDSDEEPI24") | (survey == "VVDSWIDEI22.5")

for ii, el in enumerate(dataList[selection]):
		print el, "stacks !"
		st=SpectraStacking(el, Nspec = 100, dLambda = 0.001)
		st.stackSpectra()
		st=SpectraStacking(el, Nspec = 200, dLambda = 0.001)
		st.stackSpectra()
		st=SpectraStacking(el, Nspec = 400, dLambda = 0.001)
		st.stackSpectra()

selection = (survey =="DEEP2R24.2")
for ii, el in enumerate(dataList[selection]):
		print el, "stacks !"
		st=SpectraStacking(el, Nspec = 100, dLambda = 0.00007)
		st.stackSpectra()
		st=SpectraStacking(el, Nspec = 200, dLambda = 0.00007)
		st.stackSpectra()
		st=SpectraStacking(el, Nspec = 400, dLambda = 0.00007)
		st.stackSpectra()

